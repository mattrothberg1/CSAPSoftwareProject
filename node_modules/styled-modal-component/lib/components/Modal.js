"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Modal = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledConfig = require("styled-config");

var _ModalContent = require("./ModalContent");

var _ModalDialog = require("./ModalDialog");

var _ModalBackdrop = require("./ModalBackdrop");

var _ModalWrapper = require("./ModalWrapper");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n      visibility: hidden;\n      opacity: 0;\n    "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: block;\n  transition: visibility 0.5s, opacity 0.5s ease-out;\n\n  ", "\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Fade = _styledComponents.default.div(_templateObject(), function (_ref) {
  var hidden = _ref.hidden;
  return hidden && (0, _styledComponents.css)(_templateObject2());
});

var Modal =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Modal, _React$Component);

  function Modal(props) {
    var _this;

    _classCallCheck(this, Modal);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this, props));
    _this.state = {
      hidden: props.hidden
    };
    _this.elementMouseDown = null;
    _this.elementTriggeredOpen = null;
    _this.refModal = _react.default.createRef();
    _this.refFade = _react.default.createRef();
    _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));

    if (!props.hidden) {
      _this.elementTriggeredOpen = document.activeElement;
    }

    return _this;
  }

  _createClass(Modal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!this.state.hidden) {
        this.open();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.hidden !== prevProps.hidden) {
        if (!this.props.hidden) {
          this.elementTriggeredOpen = document.activeElement;
        } // eslint-disable-next-line react/no-did-update-set-state


        this.setState({
          hidden: this.props.hidden
        });
        return;
      }

      if (this.state.hidden && !prevState.hidden) {
        this.close();
      } else if (!this.state.hidden && prevState.hidden) {
        this.open();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (!this.state.hidden) {
        this.close();
      }
    }
  }, {
    key: "open",
    value: function open() {
      this.refModal.current.scrollTop = 0;
      document.body.style.overflow = 'hidden';
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;

      setTimeout(function () {
        document.body.style.overflow = '';
        var returnFocusAfterClose = _this2.props.returnFocusAfterClose;

        if (returnFocusAfterClose && _this2.elementTriggeredOpen !== null) {
          _this2.elementTriggeredOpen.focus();

          _this2.elementTriggeredOpen = null;
        }
      }, 500
      /* Fade delay */
      );
    }
  }, {
    key: "canToggle",
    value: function canToggle() {
      var backdrop = this.props.backdrop;

      if (backdrop === 'static' || backdrop === false) {
        return false;
      }

      var _window$getComputedSt = window.getComputedStyle(this.refFade.current),
          opacity = _window$getComputedSt.opacity;

      return opacity <= 0.1 || opacity >= 0.9;
    }
  }, {
    key: "handleBackdropClick",
    value: function handleBackdropClick(e) {
      if (e.target !== this.elementMouseDown) {
        return;
      }

      e.stopPropagation();

      if (this.canToggle() && e.target === this.refModal.current) {
        this.props.toggle();
      }
    }
  }, {
    key: "handleBackdropMouseDown",
    value: function handleBackdropMouseDown(e) {
      this.elementMouseDown = e.target;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          centered = _this$props.centered,
          noRadius = _this$props.noRadius,
          children = _this$props.children,
          backdrop = _this$props.backdrop,
          sm = _this$props.sm,
          lg = _this$props.lg;
      var hidden = this.state.hidden;
      return _react.default.createElement(Fade, {
        hidden: hidden,
        ref: this.refFade
      }, _react.default.createElement(_ModalWrapper.ModalWrapper, {
        theme: this.props.theme,
        ref: this.refModal,
        onMouseDown: this.handleBackdropMouseDown,
        onClick: this.handleBackdropClick
      }, _react.default.createElement(_ModalDialog.ModalDialog, {
        theme: this.props.theme,
        lg: lg,
        sm: sm,
        centered: centered,
        noRadius: noRadius
      }, _react.default.createElement(_ModalContent.ModalContent, {
        theme: this.props.theme
      }, children))), !!backdrop && _react.default.createElement(_ModalBackdrop.ModalBackdrop, {
        theme: this.props.theme,
        backdrop: backdrop
      }));
    }
  }]);

  return Modal;
}(_react.default.Component);

exports.Modal = Modal;
Modal.defaultProps = {
  theme: _styledConfig.theme,
  backdrop: true,
  returnFocusAfterClose: true,
  toggle:
  /* istanbul ignore next */
  function toggle() {}
};