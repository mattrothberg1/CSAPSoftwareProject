"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalDialog = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledConfig = require("styled-config");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n  position: relative;\n  margin: auto;\n  padding: 0.5rem;\n  min-height: calc(100% - (0.5rem * 2));\n  pointer-events: none;\n\n  ", ";\n  ", "\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n    display: flex;\n    align-items: center;\n  "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n    max-width: 500px;\n  "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["max-width: 800px;"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["max-width: 300px;"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var maxWidth = function maxWidth(props) {
  if (props.sm) {
    return (0, _styledComponents.css)(_templateObject());
  } else if (props.lg) {
    return (0, _styledComponents.css)(_templateObject2());
  }

  return (0, _styledComponents.css)(_templateObject3());
};

var dialogCentered = function dialogCentered(props) {
  return props.centered && (0, _styledComponents.css)(_templateObject4());
};

var ModalDialog = _styledComponents.default.div(_templateObject5(), function (props) {
  return dialogCentered(props);
}, function (props) {
  return maxWidth(props);
});

exports.ModalDialog = ModalDialog;
ModalDialog.defaultProps = {
  theme: _styledConfig.theme
};